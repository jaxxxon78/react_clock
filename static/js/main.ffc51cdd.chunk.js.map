{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","prevProps","name","props","debug","clearInterval","className","slice","Component","App","hasClock","clockName","rightButton","event","preventDefault","leftButton","now","toString","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"qMAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAE3BM,QAAQC,KAAK,EAAKT,MAAMC,MAAMS,iBAC7B,OAZP,gCAeE,SAAmBC,GACjB,IAAQC,EAASR,KAAKS,MAAdD,KAEJD,EAAUC,OAASA,GAErBJ,QAAQM,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDA,MApBzD,kCAwBE,WACEP,OAAOU,cAAcX,KAAKD,WAzB9B,oBA4BE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACAW,EAASR,KAAKS,MAAdD,KAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGf,EAAMS,cAAcO,OAAO,IAAK,YAzC3C,GAA2BC,a,MCGpB,IAAMC,EAAb,4MACEnB,MAAQ,CACNoB,UAAU,EACVC,UAAW,WAHf,EAMElB,QAAU,EANZ,EAqBEmB,YAAc,SAACC,GACbA,EAAMC,iBACN,EAAKjB,SAAS,CAAEa,UAAU,KAvB9B,EA0BEK,WAAa,SAACF,GACZA,EAAMC,iBACN,EAAKjB,SAAS,CAAEa,UAAU,KA5B9B,uDAQE,WAA2B,IAAD,OACxBhB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEc,UAlBd,SAAN,OAAgBnB,KAAKwB,MAAMC,WAAWV,OAAO,QAmBxC,MAEHW,SAASC,iBAAiB,cAAezB,KAAKkB,aAC9CM,SAASC,iBAAiB,QAASzB,KAAKqB,cAd5C,kCAiBE,WACEpB,OAAOU,cAAcX,KAAKD,WAlB9B,oBA+BE,WACE,MAAgCC,KAAKJ,MAA7BqB,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,SAEnB,OACE,sBAAKJ,UAAU,MAAf,UACE,6CACCI,GACC,cAAC,EAAD,CAAOR,KAAMS,WAtCvB,GAAyBH,aCVzBY,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.ffc51cdd.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  today: Date,\n};\n\ntype Props = {\n  name: string,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.today.toUTCString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { name } = this.props;\n\n    if (prevProps.name !== name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  return `Clock-${Date.now().toString().slice(-4)}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.rightButton);\n    document.addEventListener('click', this.leftButton);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  rightButton = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  leftButton = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && (\n          <Clock name={clockName} />)}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}